When starting a new space you will need to do the following to setup the environment

#Improtant, read before setting up#


VS Code Extensions
- Terraform (Anton Kulikov)
- Github Co-Pilot (Optional)
- Github Co-Pilot Chat (Optional)
- Github Theme (Optional for prefered syntax highlighting)

Terraform Setup

Run the below line by line in the bash terminal

 wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
 echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
 sudo apt update && sudo apt install terraform


Azure CLI Setup (used for login and authentication)

Run the below line by line in the bash terminal
 sudo apt update && sudo apt install azure-cli (Installation)
 az --version (Verify Installation)
 az login (Use link and type in authentication Code)
 az account show (verify login)

Git Large Files (For Large Files)

Run the below line by line in the bash terminal (Run before staging files, if done by msitake remove them from staging, run the below, then stage again)
 git lfs install
 git lfs track "file_name"
 git lfs push --all origin main
 (Now ready for with files)
 git add .
 git commit -m ""
 git push -u origin main

#Improtant!# Pushing to Github #Important!#

When pushing Terraform to Git Hub, the Terraform state file and provider registries should not be pushed. Only .tf files, scripts or other misc files. 
(Not suitable for a long standing setup, only for dev testing)

Lifecycle
1. Run <terraform init> in the relevant directory i.e </tf_test_setup> 
2. Use the infrastructure as needed for whatever you are doing. Run Terraform apply etc
3. Destroy all resources <terraform destroy> (Ensure this is done) (can be verified with <terraform show>)
4. Delete the following files & folders before staging changes. <.terraform/providers etc...)> <.terraform.lock.hcl> <terraform.tfstate> <terraform.tfstate.backup> 
5. Do <git add .> <git commit -m "message"> <git push origin main>



 


